{"ast":null,"code":"import React from \"react\";\nfunction Wordle() {\n  var height = 4; /*number of guesses*/\n  var width = 4;\n  var row = 0; /*this number represents the current word we are guessing*/\n  var column = 0; /*represents the current letter for each attempt*/\n\n  var gameOver = false;\n  window.onload = async () => {\n    const res = await fetch(\"https://api.masoudkf.com/v1/wordle\", {\n      headers: {\n        \"x-api-key\": \"sw0Tr2othT1AyTQtNDUE06LqMckbTiKWaVYhuirv\"\n      }\n    });\n    let json = await res.json();\n    let {\n      dictionary\n    } = json;\n    const wordoftheday = dictionary[Math.floor(Math.random() * dictionary.length)];\n    wordoftheday.word = wordoftheday.word.toUpperCase();\n    var word = wordoftheday.word;\n    var hint = wordoftheday.hint;\n    console.log(word);\n    console.log(hint);\n    alert(\"Click the info icon to toggle the instructions.\");\n    createboard();\n    function createboard() {\n      /*this function will create our tiles once the page loads and create eventListeners for the game.*/\n\n      document.getElementById(\"changetheme\").addEventListener(\"click\", todark);\n      document.getElementById(\"info\").addEventListener(\"click\", toggleinfo);\n      document.getElementById(\"startover\").addEventListener(\"click\", () => {\n        window.location.reload();\n      });\n      document.getElementById(\"help\").addEventListener(\"click\", displayHint);\n      for (let r = 0; r < height; r++) {\n        for (let c = 0; c < width; c++) {\n          let tile = document.createElement(\"span\");\n          tile.id = r.toString() + \"-\" + c.toString();\n          tile.classList.add(\"tile\"); /* This adds the tile class in the style sheet to the tile element. */\n          tile.innerText = \"\";\n          document.getElementById(\"board\").appendChild(tile);\n        }\n      }\n\n      //Now we add code to listen for user input\n      document.addEventListener(\"keyup\", e => {\n        //We use key up here so that letters are only registered when a key comes up after pushing it down. (To avoid spamming)\n        if (gameOver) return; //Note that (e) is just a parameter for an actual pressed key\n        //processInput(e);\n        if (\"KeyA\" <= e.code && e.code <= \"KeyZ\") {\n          if (column < width) {\n            let currTile = document.getElementById(row.toString() + '-' + column.toString());\n            if (currTile.innerText == \"\") {\n              currTile.innerText = e.code[3];\n              column += 1;\n            }\n          }\n        } else if (e.code == \"Backspace\") {\n          if (0 < column && column <= width) {\n            column -= 1;\n          }\n          //Because we went back one tile, we need to update the tile id\n          let currTile = document.getElementById(row.toString() + '-' + column.toString());\n          currTile.innerText = \"\"; // so if backspace is pressed, we change the value of the current tile to nothing and we decrement column by 1.\n        } else if (e.code == \"Enter\") {\n          if (column != width) {\n            alert(\"first complete the word\");\n          } else if (column == width) {\n            update(); //we call an update function that will process the contents of that row and change the colors of the boxes.\n            row += 1; //fresh row\n            column = 0; // first column in fresh row\n          }\n        }\n        if (!gameOver && row == height) {\n          gameOver = true;\n          document.getElementById(\"answer\").innerText = word; // adds the word to the header tag with the id \"answer\". Note that \"answer\" can also be styled in the css using its id.\n          document.getElementById(\"bottom\").innerText = \"You missed the word \" + word + \" and lost!\";\n          document.getElementById(\"bottom\").style.backgroundColor = \"darkred\";\n          document.getElementById(\"bottom\").style.color = \"white\";\n          document.getElementById(\"vertical_line\").style.display = \"none\";\n          document.getElementById(\"bottom\").style.marginTop = \"14%\";\n        }\n      });\n    }\n    function update() {\n      let correctletters = 0;\n      for (let i = 0; i < width; i++) {\n        let currTile = document.getElementById(row.toString() + '-' + i.toString());\n        let letter = currTile.innerText;\n\n        //if the letter is in the coorect position, we increase the number of correct letters\n        if (word[i] == letter) {\n          currTile.classList.add(\"correct\"); //adds the \"correct\" style class to the tile if it is the right position\n          correctletters += 1;\n        } else if (word.includes(letter)) {\n          currTile.classList.add(\"present\");\n        } else {\n          currTile.classList.add(\"absent\");\n        }\n      }\n      if (correctletters == width) {\n        gameOver = true;\n        document.getElementById(\"bottom\").innerText = \"You guessed the word \" + word + \" correctly!\";\n        document.getElementById(\"bottom\").style.backgroundColor = \"yellowgreen\";\n        document.getElementById(\"vertical_line\").style.display = \"none\";\n        document.getElementById(\"board\").style.display = \"none\";\n        document.getElementById(\"infotext\").style.display = \"none\";\n        document.getElementById(\"congratulations\").style.display = \"flex\";\n        document.getElementById(\"bottom\").style.marginTop = \"2%\";\n      }\n    }\n    function todark() {\n      var something = document.body;\n      something.classList.toggle(\"dark\");\n      var boardtext = document.getElementById(\"board\");\n      boardtext.classList.toggle(\"whitetext\");\n    }\n    function toggleinfo() {\n      var info = document.getElementById(\"infotext\");\n      info.classList.toggle(\"display\");\n      var line = document.getElementById(\"vertical_line\");\n      line.classList.toggle(\"display\");\n    }\n    function displayHint() {\n      document.getElementById(\"bottom\").innerText = \"Hint: \" + hint;\n      document.getElementById(\"bottom\").style.backgroundColor = \"beige\";\n      document.getElementById(\"vertical_line\").style.display = \"none\";\n      document.getElementById(\"bottom\").style.color = \"black\";\n    }\n  };\n}\n_c = Wordle;\nexport default Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["React","Wordle","height","width","row","column","gameOver","window","onload","res","fetch","headers","json","dictionary","wordoftheday","Math","floor","random","length","word","toUpperCase","hint","console","log","alert","createboard","document","getElementById","addEventListener","todark","toggleinfo","location","reload","displayHint","r","c","tile","createElement","id","toString","classList","add","innerText","appendChild","e","code","currTile","update","style","backgroundColor","color","display","marginTop","correctletters","i","letter","includes","something","body","toggle","boardtext","info","line","_c","$RefreshReg$"],"sources":["/Users/ej/Desktop/assignment-05-wordle-emiko47/wordle/src/Wordle.js"],"sourcesContent":["\nimport React from \"react\";\n\nfunction Wordle (){\n    \n    var height = 4; /*number of guesses*/\n    var width = 4;\n\n    var row = 0; /*this number represents the current word we are guessing*/\n    var column = 0; /*represents the current letter for each attempt*/\n\n    var gameOver = false;\n\n\n\n    window.onload = async() =>{\n        const res = await fetch(\"https://api.masoudkf.com/v1/wordle\", {\n            headers: {\n                \"x-api-key\": \"sw0Tr2othT1AyTQtNDUE06LqMckbTiKWaVYhuirv\",\n            },\n        });\n        let json = await res.json();\n        let { dictionary } = json;\n        const wordoftheday = dictionary[Math.floor(Math.random() * dictionary.length)];\n        wordoftheday.word = wordoftheday.word.toUpperCase();\n        \n        var word = wordoftheday.word;\n        var hint = wordoftheday.hint;\n    \n\n        console.log(word);\n        console.log(hint);\n\n        alert(\"Click the info icon to toggle the instructions.\")\n\n    createboard();\n        \n        \n        function createboard() { /*this function will create our tiles once the page loads and create eventListeners for the game.*/\n        \n            document.getElementById(\"changetheme\").addEventListener(\"click\", todark);\n            document.getElementById(\"info\").addEventListener(\"click\", toggleinfo);\n            document.getElementById(\"startover\").addEventListener(\"click\", () => {window.location.reload()} );\n            document.getElementById(\"help\").addEventListener(\"click\",displayHint);\n        \n        \n        \n            for (let r = 0; r < height; r++) {\n                for (let c = 0; c < width; c++) {\n                    let tile = document.createElement(\"span\");\n                    tile.id = r.toString() + \"-\" + c.toString();\n                    tile.classList.add(\"tile\");/* This adds the tile class in the style sheet to the tile element. */\n                    tile.innerText = \"\";\n                    document.getElementById(\"board\").appendChild(tile);\n                }\n        \n            }\n        \n            \n            //Now we add code to listen for user input\n            document.addEventListener(\"keyup\", (e) => { //We use key up here so that letters are only registered when a key comes up after pushing it down. (To avoid spamming)\n                if (gameOver) return;                   //Note that (e) is just a parameter for an actual pressed key\n                //processInput(e);\n                if (\"KeyA\" <= e.code && e.code <= \"KeyZ\") {\n                    if (column < width) {\n                        let currTile = document.getElementById(row.toString() + '-' + column.toString());\n                        if (currTile.innerText == \"\") {\n                            currTile.innerText = e.code[3];\n                            column += 1;\n                        }\n                    }\n                }\n                else if (e.code == \"Backspace\"){\n                    if(0< column && column <= width){\n                        column -= 1;\n                    }\n                    //Because we went back one tile, we need to update the tile id\n                    let currTile = document.getElementById(row.toString() + '-' + column.toString());\n                    currTile.innerText = \"\"; // so if backspace is pressed, we change the value of the current tile to nothing and we decrement column by 1.\n                }\n                \n        \n                else if (e.code == \"Enter\"){\n                    if (column != width){\n                            alert(\"first complete the word\");\n                        }\n                \n                    else if (column == width){\n                        update();//we call an update function that will process the contents of that row and change the colors of the boxes.\n                        row += 1;//fresh row\n                        column = 0// first column in fresh row\n                    }\n                }\n                \n                if(!gameOver && row == height){\n                    gameOver = true;\n                    document.getElementById(\"answer\").innerText = word;// adds the word to the header tag with the id \"answer\". Note that \"answer\" can also be styled in the css using its id.\n                    document.getElementById(\"bottom\").innerText = \"You missed the word \"+word+\" and lost!\";\n                    document.getElementById(\"bottom\").style.backgroundColor = \"darkred\";\n                    document.getElementById(\"bottom\").style.color = \"white\";\n                    document.getElementById(\"vertical_line\").style.display = \"none\";\n                    document.getElementById(\"bottom\").style.marginTop = \"14%\";\n                }\n        \n            })\n        }\n        \n        function update() {\n            \n            let correctletters = 0;\n            for(let i = 0; i < width; i++){\n                let currTile = document.getElementById(row.toString() + '-' + i.toString());\n                let letter = currTile.innerText;\n                \n                //if the letter is in the coorect position, we increase the number of correct letters\n                if (word[i] == letter) {\n                    currTile.classList.add(\"correct\");//adds the \"correct\" style class to the tile if it is the right position\n                    correctletters += 1;\n                }\n                else if (word.includes(letter)){\n                    currTile.classList.add(\"present\");\n                }\n                else{\n                    currTile.classList.add(\"absent\");\n                }\n            }\n            if (correctletters == width){\n                gameOver = true;\n                document.getElementById(\"bottom\").innerText = \"You guessed the word \"+word+\" correctly!\";\n                document.getElementById(\"bottom\").style.backgroundColor = \"yellowgreen\";\n                document.getElementById(\"vertical_line\").style.display = \"none\";\n                document.getElementById(\"board\").style.display = \"none\";\n                document.getElementById(\"infotext\").style.display = \"none\";\n                document.getElementById(\"congratulations\").style.display = \"flex\";\n                document.getElementById(\"bottom\").style.marginTop = \"2%\";\n            }\n        \n        }\n        \n        \n        function todark(){\n            var something = document.body;\n            something.classList.toggle(\"dark\");\n            var boardtext = document.getElementById(\"board\");\n            boardtext.classList.toggle(\"whitetext\");\n            \n        }\n        \n        \n        function toggleinfo(){\n            var info = document.getElementById(\"infotext\");\n            info.classList.toggle(\"display\");\n        \n            var line = document.getElementById(\"vertical_line\");\n            line.classList.toggle(\"display\");\n        }\n\n        function displayHint(){\n            document.getElementById(\"bottom\").innerText = \"Hint: \"+hint;\n            document.getElementById(\"bottom\").style.backgroundColor = \"beige\";\n            document.getElementById(\"vertical_line\").style.display = \"none\";\n            document.getElementById(\"bottom\").style.color = \"black\";\n        }\n\n    }\n    \n\n}\n   \n\nexport default Wordle;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}