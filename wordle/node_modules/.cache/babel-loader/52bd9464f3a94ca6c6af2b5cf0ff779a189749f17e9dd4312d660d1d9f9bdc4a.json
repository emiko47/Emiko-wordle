{"ast":null,"code":"var _jsxFileName = \"/Users/ej/Desktop/assignment-05-wordle-emiko47/wordle/src/Wordle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Wordle() {\n  _s();\n  const height = 4; // number of guesses\n  const width = 4;\n  let row = 0; // this number represents the current word we are guessing\n  let column = 0; // represents the current letter for each attempt\n\n  let gameOver = false;\n  const objects = [{\n    word: \"apple\",\n    hint: \"A fruit that keeps the doctor away.\"\n  }, {\n    word: \"elephant\",\n    hint: \"The largest land animal.\"\n  }, {\n    word: \"ocean\",\n    hint: \"A vast body of salt water.\"\n  }, {\n    word: \"guitar\",\n    hint: \"A musical instrument with strings.\"\n  }, {\n    word: \"pyramid\",\n    hint: \"A triangular structure in Egypt.\"\n  }, {\n    word: \"mountain\",\n    hint: \"A large natural elevation of the earth's surface.\"\n  }, {\n    word: \"computer\",\n    hint: \"An electronic device for storing and processing data.\"\n  }, {\n    word: \"rainbow\",\n    hint: \"A spectrum of light in the sky.\"\n  }, {\n    word: \"butterfly\",\n    hint: \"An insect with colorful wings.\"\n  }, {\n    word: \"library\",\n    hint: \"A place with a collection of books.\"\n  }];\n  const [wordoftheday, setWordOfTheDay] = useState({});\n  const [word, setWord] = useState(\"\");\n  const [hint, setHint] = useState(\"\");\n  useEffect(() => {\n    const randomObject = objects[Math.floor(Math.random() * objects.length)];\n    setWordOfTheDay(randomObject);\n    setWord(randomObject.word.toUpperCase());\n    setHint(randomObject.hint);\n    console.log(randomObject.word.toUpperCase());\n    console.log(randomObject.hint);\n    alert(\"Click the info icon to toggle the instructions.\");\n    createboard();\n  }, []);\n  function createboard() {\n    document.getElementById(\"changetheme\").addEventListener(\"click\", todark);\n    document.getElementById(\"info\").addEventListener(\"click\", toggleinfo);\n    document.getElementById(\"startover\").addEventListener(\"click\", () => {\n      window.location.reload();\n    });\n    document.getElementById(\"help\").addEventListener(\"click\", displayHint);\n    for (let r = 0; r < height; r++) {\n      for (let c = 0; c < width; c++) {\n        let tile = document.createElement(\"span\");\n        tile.id = r.toString() + \"-\" + c.toString();\n        tile.classList.add(\"tile\"); // This adds the tile class in the style sheet to the tile element.\n        tile.innerText = \"\";\n        document.getElementById(\"board\").appendChild(tile);\n      }\n    }\n\n    // Now we add code to listen for user input\n    document.addEventListener(\"keyup\", e => {\n      // We use key up here so that letters are only registered when a key comes up after pushing it down. (To avoid spamming)\n      if (gameOver) return; // Note that (e) is just a parameter for an actual pressed key\n      // processInput(e);\n      if (\"KeyA\" <= e.code && e.code <= \"KeyZ\") {\n        if (column < width) {\n          let currTile = document.getElementById(row.toString() + \"-\" + column.toString());\n          if (currTile.innerText === \"\") {\n            currTile.innerText = e.code[3];\n            column += 1;\n          }\n        }\n      } else if (e.code === \"Backspace\") {\n        if (0 < column && column <= width) {\n          column -= 1;\n        }\n        // Because we went back one tile, we need to update the tile id\n        let currTile = document.getElementById(row.toString() + \"-\" + column.toString());\n        currTile.innerText = \"\"; // so if backspace is pressed, we change the value of the current tile to nothing and we decrement column by 1.\n      } else if (e.code === \"Enter\") {\n        if (column !== width) {\n          alert(\"first complete the word\");\n        } else if (column === width) {\n          update(); // we call an update function that will process the contents of that row and change the colors of the boxes.\n          row += 1; // fresh row\n          column = 0; // first column in fresh row\n        }\n      }\n      if (!gameOver && row === height) {\n        gameOver = true;\n        document.getElementById(\"answer\").innerText = word; // adds the word to the header tag with the id \"answer\". Note that \"answer\" can also be styled in the css using its id.\n        document.getElementById(\"bottom\").innerText = \"You missed the word \" + word + \" and lost!\";\n        document.getElementById(\"bottom\").style.backgroundColor = \"darkred\";\n        document.getElementById(\"bottom\").style.color = \"white\";\n        document.getElementById(\"vertical_line\").style.display = \"none\";\n        document.getElementById(\"bottom\").style.marginTop = \"14%\";\n      }\n    });\n  }\n  function update() {\n    let correctletters = 0;\n    for (let i = 0; i < width; i++) {\n      let currTile = document.getElementById(row.toString() + \"-\" + i.toString());\n      let letter = currTile.innerText;\n\n      // if the letter is in the correct position, we increase the number of correct letters\n      if (word[i] === letter) {\n        currTile.classList.add(\"correct\"); // adds the \"correct\" style class to the tile if it is the right position\n        correctletters += 1;\n      } else if (word.includes(letter)) {\n        currTile.classList.add(\"present\");\n      } else {\n        currTile.classList.add(\"absent\");\n      }\n    }\n    if (correctletters === width) {\n      gameOver = true;\n      document.getElementById(\"bottom\").innerText = \"You guessed the word \" + word + \" correctly!\";\n      document.getElementById(\"bottom\").style.backgroundColor = \"yellowgreen\";\n      document.getElementById(\"vertical_line\").style.display = \"none\";\n      document.getElementById(\"board\").style.display = \"none\";\n      document.getElementById(\"infotext\").style.display = \"none\";\n      document.getElementById(\"congratulations\").style.display = \"flex\";\n      document.getElementById(\"bottom\").style.marginTop = \"2%\";\n    }\n  }\n  function todark() {\n    var something = document.body;\n    something.classList.toggle(\"dark\");\n    var boardtext = document.getElementById(\"board\");\n    boardtext.classList.toggle(\"whitetext\");\n  }\n  function toggleinfo() {\n    var info = document.getElementById(\"infotext\");\n    info.classList.toggle(\"display\");\n    var line = document.getElementById(\"vertical_line\");\n    line.classList.toggle(\"display\");\n  }\n  function displayHint() {\n    document.getElementById(\"bottom\").innerText = \"Hint: \" + hint;\n    document.getElementById(\"bottom\").style.backgroundColor = \"beige\";\n    document.getElementById(\"vertical_line\").style.display = \"none\";\n    document.getElementById(\"bottom\").style.color = \"black\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"infotext\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"vertical_line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"congratulations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n}\n_s(Wordle, \"t/Q763ZHSzRVXyWJFK+vGp4tzAc=\");\n_c = Wordle;\nexport default Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Wordle","_s","height","width","row","column","gameOver","objects","word","hint","wordoftheday","setWordOfTheDay","setWord","setHint","randomObject","Math","floor","random","length","toUpperCase","console","log","alert","createboard","document","getElementById","addEventListener","todark","toggleinfo","window","location","reload","displayHint","r","c","tile","createElement","id","toString","classList","add","innerText","appendChild","e","code","currTile","update","style","backgroundColor","color","display","marginTop","correctletters","i","letter","includes","something","body","toggle","boardtext","info","line","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ej/Desktop/assignment-05-wordle-emiko47/wordle/src/Wordle.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Wordle() {\n    const height = 4; // number of guesses\n    const width = 4;\n\n    let row = 0; // this number represents the current word we are guessing\n    let column = 0; // represents the current letter for each attempt\n\n    let gameOver = false;\n\n    const objects = [\n        {\n            word: \"apple\",\n            hint: \"A fruit that keeps the doctor away.\",\n        },\n        {\n            word: \"elephant\",\n            hint: \"The largest land animal.\",\n        },\n        {\n            word: \"ocean\",\n            hint: \"A vast body of salt water.\",\n        },\n        {\n            word: \"guitar\",\n            hint: \"A musical instrument with strings.\",\n        },\n        {\n            word: \"pyramid\",\n            hint: \"A triangular structure in Egypt.\",\n        },\n        {\n            word: \"mountain\",\n            hint: \"A large natural elevation of the earth's surface.\",\n        },\n        {\n            word: \"computer\",\n            hint: \"An electronic device for storing and processing data.\",\n        },\n        {\n            word: \"rainbow\",\n            hint: \"A spectrum of light in the sky.\",\n        },\n        {\n            word: \"butterfly\",\n            hint: \"An insect with colorful wings.\",\n        },\n        {\n            word: \"library\",\n            hint: \"A place with a collection of books.\",\n        },\n    ];\n\n    const [wordoftheday, setWordOfTheDay] = useState({});\n    const [word, setWord] = useState(\"\");\n    const [hint, setHint] = useState(\"\");\n\n    useEffect(() => {\n        const randomObject = objects[Math.floor(Math.random() * objects.length)];\n        setWordOfTheDay(randomObject);\n        setWord(randomObject.word.toUpperCase());\n        setHint(randomObject.hint);\n        console.log(randomObject.word.toUpperCase());\n        console.log(randomObject.hint);\n        alert(\"Click the info icon to toggle the instructions.\");\n        createboard();\n    }, []);\n\n    function createboard() {\n        document.getElementById(\"changetheme\").addEventListener(\"click\", todark);\n        document.getElementById(\"info\").addEventListener(\"click\", toggleinfo);\n        document.getElementById(\"startover\").addEventListener(\"click\", () => {\n            window.location.reload();\n        });\n        document.getElementById(\"help\").addEventListener(\"click\", displayHint);\n\n        for (let r = 0; r < height; r++) {\n            for (let c = 0; c < width; c++) {\n                let tile = document.createElement(\"span\");\n                tile.id = r.toString() + \"-\" + c.toString();\n                tile.classList.add(\"tile\"); // This adds the tile class in the style sheet to the tile element.\n                tile.innerText = \"\";\n                document.getElementById(\"board\").appendChild(tile);\n            }\n        }\n\n        // Now we add code to listen for user input\n        document.addEventListener(\"keyup\", (e) => {\n            // We use key up here so that letters are only registered when a key comes up after pushing it down. (To avoid spamming)\n            if (gameOver) return; // Note that (e) is just a parameter for an actual pressed key\n            // processInput(e);\n            if (\"KeyA\" <= e.code && e.code <= \"KeyZ\") {\n                if (column < width) {\n                    let currTile = document.getElementById(row.toString() + \"-\" + column.toString());\n                    if (currTile.innerText === \"\") {\n                        currTile.innerText = e.code[3];\n                        column += 1;\n                    }\n                }\n            } else if (e.code === \"Backspace\") {\n                if (0 < column && column <= width) {\n                    column -= 1;\n                }\n                // Because we went back one tile, we need to update the tile id\n                let currTile = document.getElementById(row.toString() + \"-\" + column.toString());\n                currTile.innerText = \"\"; // so if backspace is pressed, we change the value of the current tile to nothing and we decrement column by 1.\n            } else if (e.code === \"Enter\") {\n                if (column !== width) {\n                    alert(\"first complete the word\");\n                } else if (column === width) {\n                    update(); // we call an update function that will process the contents of that row and change the colors of the boxes.\n                    row += 1; // fresh row\n                    column = 0; // first column in fresh row\n                }\n            }\n\n            if (!gameOver && row === height) {\n                gameOver = true;\n                document.getElementById(\"answer\").innerText = word; // adds the word to the header tag with the id \"answer\". Note that \"answer\" can also be styled in the css using its id.\n                document.getElementById(\"bottom\").innerText = \"You missed the word \" + word + \" and lost!\";\n                document.getElementById(\"bottom\").style.backgroundColor = \"darkred\";\n                document.getElementById(\"bottom\").style.color = \"white\";\n                document.getElementById(\"vertical_line\").style.display = \"none\";\n                document.getElementById(\"bottom\").style.marginTop = \"14%\";\n            }\n        });\n    }\n\n    function update() {\n        let correctletters = 0;\n        for (let i = 0; i < width; i++) {\n            let currTile = document.getElementById(row.toString() + \"-\" + i.toString());\n            let letter = currTile.innerText;\n\n            // if the letter is in the correct position, we increase the number of correct letters\n            if (word[i] === letter) {\n                currTile.classList.add(\"correct\"); // adds the \"correct\" style class to the tile if it is the right position\n                correctletters += 1;\n            } else if (word.includes(letter)) {\n                currTile.classList.add(\"present\");\n            } else {\n                currTile.classList.add(\"absent\");\n            }\n        }\n        if (correctletters === width) {\n            gameOver = true;\n            document.getElementById(\"bottom\").innerText = \"You guessed the word \" + word + \" correctly!\";\n            document.getElementById(\"bottom\").style.backgroundColor = \"yellowgreen\";\n            document.getElementById(\"vertical_line\").style.display = \"none\";\n            document.getElementById(\"board\").style.display = \"none\";\n            document.getElementById(\"infotext\").style.display = \"none\";\n            document.getElementById(\"congratulations\").style.display = \"flex\";\n            document.getElementById(\"bottom\").style.marginTop = \"2%\";\n        }\n    }\n\n    function todark() {\n        var something = document.body;\n        something.classList.toggle(\"dark\");\n        var boardtext = document.getElementById(\"board\");\n        boardtext.classList.toggle(\"whitetext\");\n    }\n\n    function toggleinfo() {\n        var info = document.getElementById(\"infotext\");\n        info.classList.toggle(\"display\");\n\n        var line = document.getElementById(\"vertical_line\");\n        line.classList.toggle(\"display\");\n    }\n\n    function displayHint() {\n        document.getElementById(\"bottom\").innerText = \"Hint: \" + hint;\n        document.getElementById(\"bottom\").style.backgroundColor = \"beige\";\n        document.getElementById(\"vertical_line\").style.display = \"none\";\n        document.getElementById(\"bottom\").style.color = \"black\";\n    }\n\n    return (\n        <div>\n            {/* Your JSX code goes here */}\n            <div id=\"board\"></div>\n            <div id=\"bottom\"></div>\n            <div id=\"answer\"></div>\n            <div id=\"infotext\"></div>\n            <div id=\"vertical_line\"></div>\n            <div id=\"congratulations\"></div>\n        </div>\n    );\n}\n\nexport default Wordle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}