{"ast":null,"code":"import React from \"react\";\nfunction Wordle() {\n  var height = 4; /*number of guesses*/\n  var width = 4;\n  var row = 0; /*this number represents the current word we are guessing*/\n  var column = 0; /*represents the current letter for each attempt*/\n\n  var gameOver = false;\n  const objects = [{\n    \"word\": \"apple\",\n    \"hint\": \"A fruit that keeps the doctor away.\"\n  }, {\n    \"word\": \"elephant\",\n    \"hint\": \"The largest land animal.\"\n  }, {\n    \"word\": \"ocean\",\n    \"hint\": \"A vast body of salt water.\"\n  }, {\n    \"word\": \"guitar\",\n    \"hint\": \"A musical instrument with strings.\"\n  }, {\n    \"word\": \"pyramid\",\n    \"hint\": \"A triangular structure in Egypt.\"\n  }, {\n    \"word\": \"mountain\",\n    \"hint\": \"A large natural elevation of the earth's surface.\"\n  }, {\n    \"word\": \"computer\",\n    \"hint\": \"An electronic device for storing and processing data.\"\n  }, {\n    \"word\": \"rainbow\",\n    \"hint\": \"A spectrum of light in the sky.\"\n  }, {\n    \"word\": \"butterfly\",\n    \"hint\": \"An insect with colorful wings.\"\n  }, {\n    \"word\": \"library\",\n    \"hint\": \"A place with a collection of books.\"\n  }];\n  let {\n    dictionary\n  } = objects;\n  const wordoftheday = dictionary[Math.floor(Math.random() * dictionary.length)];\n  wordoftheday.word = wordoftheday.word.toUpperCase();\n  var word = wordoftheday.word;\n  var hint = wordoftheday.hint;\n  console.log(word);\n  console.log(hint);\n  alert(\"Click the info icon to toggle the instructions.\");\n  createboard();\n  function createboard() {\n    /*this function will create our tiles once the page loads and create eventListeners for the game.*/\n\n    document.getElementById(\"changetheme\").addEventListener(\"click\", todark);\n    document.getElementById(\"info\").addEventListener(\"click\", toggleinfo);\n    document.getElementById(\"startover\").addEventListener(\"click\", () => {\n      window.location.reload();\n    });\n    document.getElementById(\"help\").addEventListener(\"click\", displayHint);\n    for (let r = 0; r < height; r++) {\n      for (let c = 0; c < width; c++) {\n        let tile = document.createElement(\"span\");\n        tile.id = r.toString() + \"-\" + c.toString();\n        tile.classList.add(\"tile\"); /* This adds the tile class in the style sheet to the tile element. */\n        tile.innerText = \"\";\n        document.getElementById(\"board\").appendChild(tile);\n      }\n    }\n\n    //Now we add code to listen for user input\n    document.addEventListener(\"keyup\", e => {\n      //We use key up here so that letters are only registered when a key comes up after pushing it down. (To avoid spamming)\n      if (gameOver) return; //Note that (e) is just a parameter for an actual pressed key\n      //processInput(e);\n      if (\"KeyA\" <= e.code && e.code <= \"KeyZ\") {\n        if (column < width) {\n          let currTile = document.getElementById(row.toString() + '-' + column.toString());\n          if (currTile.innerText == \"\") {\n            currTile.innerText = e.code[3];\n            column += 1;\n          }\n        }\n      } else if (e.code == \"Backspace\") {\n        if (0 < column && column <= width) {\n          column -= 1;\n        }\n        //Because we went back one tile, we need to update the tile id\n        let currTile = document.getElementById(row.toString() + '-' + column.toString());\n        currTile.innerText = \"\"; // so if backspace is pressed, we change the value of the current tile to nothing and we decrement column by 1.\n      } else if (e.code == \"Enter\") {\n        if (column != width) {\n          alert(\"first complete the word\");\n        } else if (column == width) {\n          update(); //we call an update function that will process the contents of that row and change the colors of the boxes.\n          row += 1; //fresh row\n          column = 0; // first column in fresh row\n        }\n      }\n      if (!gameOver && row == height) {\n        gameOver = true;\n        document.getElementById(\"answer\").innerText = word; // adds the word to the header tag with the id \"answer\". Note that \"answer\" can also be styled in the css using its id.\n        document.getElementById(\"bottom\").innerText = \"You missed the word \" + word + \" and lost!\";\n        document.getElementById(\"bottom\").style.backgroundColor = \"darkred\";\n        document.getElementById(\"bottom\").style.color = \"white\";\n        document.getElementById(\"vertical_line\").style.display = \"none\";\n        document.getElementById(\"bottom\").style.marginTop = \"14%\";\n      }\n    });\n  }\n  function update() {\n    let correctletters = 0;\n    for (let i = 0; i < width; i++) {\n      let currTile = document.getElementById(row.toString() + '-' + i.toString());\n      let letter = currTile.innerText;\n\n      //if the letter is in the coorect position, we increase the number of correct letters\n      if (word[i] == letter) {\n        currTile.classList.add(\"correct\"); //adds the \"correct\" style class to the tile if it is the right position\n        correctletters += 1;\n      } else if (word.includes(letter)) {\n        currTile.classList.add(\"present\");\n      } else {\n        currTile.classList.add(\"absent\");\n      }\n    }\n    if (correctletters == width) {\n      gameOver = true;\n      document.getElementById(\"bottom\").innerText = \"You guessed the word \" + word + \" correctly!\";\n      document.getElementById(\"bottom\").style.backgroundColor = \"yellowgreen\";\n      document.getElementById(\"vertical_line\").style.display = \"none\";\n      document.getElementById(\"board\").style.display = \"none\";\n      document.getElementById(\"infotext\").style.display = \"none\";\n      document.getElementById(\"congratulations\").style.display = \"flex\";\n      document.getElementById(\"bottom\").style.marginTop = \"2%\";\n    }\n  }\n  function todark() {\n    var something = document.body;\n    something.classList.toggle(\"dark\");\n    var boardtext = document.getElementById(\"board\");\n    boardtext.classList.toggle(\"whitetext\");\n  }\n  function toggleinfo() {\n    var info = document.getElementById(\"infotext\");\n    info.classList.toggle(\"display\");\n    var line = document.getElementById(\"vertical_line\");\n    line.classList.toggle(\"display\");\n  }\n  function displayHint() {\n    document.getElementById(\"bottom\").innerText = \"Hint: \" + hint;\n    document.getElementById(\"bottom\").style.backgroundColor = \"beige\";\n    document.getElementById(\"vertical_line\").style.display = \"none\";\n    document.getElementById(\"bottom\").style.color = \"black\";\n  }\n}\n_c = Wordle;\nexport default Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["React","Wordle","height","width","row","column","gameOver","objects","dictionary","wordoftheday","Math","floor","random","length","word","toUpperCase","hint","console","log","alert","createboard","document","getElementById","addEventListener","todark","toggleinfo","window","location","reload","displayHint","r","c","tile","createElement","id","toString","classList","add","innerText","appendChild","e","code","currTile","update","style","backgroundColor","color","display","marginTop","correctletters","i","letter","includes","something","body","toggle","boardtext","info","line","_c","$RefreshReg$"],"sources":["/Users/ej/Desktop/assignment-05-wordle-emiko47/wordle/src/Wordle.js"],"sourcesContent":["\nimport React from \"react\";\n\nfunction Wordle (){\n    \n    var height = 4; /*number of guesses*/\n    var width = 4;\n\n    var row = 0; /*this number represents the current word we are guessing*/\n    var column = 0; /*represents the current letter for each attempt*/\n\n    var gameOver = false;\n\n\n\n\n       const objects = [\n        {\n            \"word\": \"apple\",\n            \"hint\": \"A fruit that keeps the doctor away.\"\n        },\n        {\n            \"word\": \"elephant\",\n            \"hint\": \"The largest land animal.\"\n        },\n        {\n            \"word\": \"ocean\",\n            \"hint\": \"A vast body of salt water.\"\n        },\n        {\n            \"word\": \"guitar\",\n            \"hint\": \"A musical instrument with strings.\"\n        },\n        {\n            \"word\": \"pyramid\",\n            \"hint\": \"A triangular structure in Egypt.\"\n        },\n        {\n            \"word\": \"mountain\",\n            \"hint\": \"A large natural elevation of the earth's surface.\"\n        },\n        {\n            \"word\": \"computer\",\n            \"hint\": \"An electronic device for storing and processing data.\"\n        },\n        {\n            \"word\": \"rainbow\",\n            \"hint\": \"A spectrum of light in the sky.\"\n        },\n        {\n            \"word\": \"butterfly\",\n            \"hint\": \"An insect with colorful wings.\"\n        },\n        {\n            \"word\": \"library\",\n            \"hint\": \"A place with a collection of books.\"\n        }\n    ]\n\n\n\n\n\n        let { dictionary } = objects;\n        const wordoftheday = dictionary[Math.floor(Math.random() * dictionary.length)];\n        wordoftheday.word = wordoftheday.word.toUpperCase();\n        \n        var word = wordoftheday.word;\n        var hint = wordoftheday.hint;\n    \n\n        console.log(word);\n        console.log(hint);\n\n        alert(\"Click the info icon to toggle the instructions.\")\n\n        createboard();\n        \n        \n        function createboard() { /*this function will create our tiles once the page loads and create eventListeners for the game.*/\n        \n            document.getElementById(\"changetheme\").addEventListener(\"click\", todark);\n            document.getElementById(\"info\").addEventListener(\"click\", toggleinfo);\n            document.getElementById(\"startover\").addEventListener(\"click\", () => {window.location.reload()} );\n            document.getElementById(\"help\").addEventListener(\"click\",displayHint);\n        \n        \n        \n            for (let r = 0; r < height; r++) {\n                for (let c = 0; c < width; c++) {\n                    let tile = document.createElement(\"span\");\n                    tile.id = r.toString() + \"-\" + c.toString();\n                    tile.classList.add(\"tile\");/* This adds the tile class in the style sheet to the tile element. */\n                    tile.innerText = \"\";\n                    document.getElementById(\"board\").appendChild(tile);\n                }\n        \n            }\n        \n            \n            //Now we add code to listen for user input\n            document.addEventListener(\"keyup\", (e) => { //We use key up here so that letters are only registered when a key comes up after pushing it down. (To avoid spamming)\n                if (gameOver) return;                   //Note that (e) is just a parameter for an actual pressed key\n                //processInput(e);\n                if (\"KeyA\" <= e.code && e.code <= \"KeyZ\") {\n                    if (column < width) {\n                        let currTile = document.getElementById(row.toString() + '-' + column.toString());\n                        if (currTile.innerText == \"\") {\n                            currTile.innerText = e.code[3];\n                            column += 1;\n                        }\n                    }\n                }\n                else if (e.code == \"Backspace\"){\n                    if(0< column && column <= width){\n                        column -= 1;\n                    }\n                    //Because we went back one tile, we need to update the tile id\n                    let currTile = document.getElementById(row.toString() + '-' + column.toString());\n                    currTile.innerText = \"\"; // so if backspace is pressed, we change the value of the current tile to nothing and we decrement column by 1.\n                }\n                \n        \n                else if (e.code == \"Enter\"){\n                    if (column != width){\n                            alert(\"first complete the word\");\n                        }\n                \n                    else if (column == width){\n                        update();//we call an update function that will process the contents of that row and change the colors of the boxes.\n                        row += 1;//fresh row\n                        column = 0// first column in fresh row\n                    }\n                }\n                \n                if(!gameOver && row == height){\n                    gameOver = true;\n                    document.getElementById(\"answer\").innerText = word;// adds the word to the header tag with the id \"answer\". Note that \"answer\" can also be styled in the css using its id.\n                    document.getElementById(\"bottom\").innerText = \"You missed the word \"+word+\" and lost!\";\n                    document.getElementById(\"bottom\").style.backgroundColor = \"darkred\";\n                    document.getElementById(\"bottom\").style.color = \"white\";\n                    document.getElementById(\"vertical_line\").style.display = \"none\";\n                    document.getElementById(\"bottom\").style.marginTop = \"14%\";\n                }\n        \n            })\n        }\n        \n        function update() {\n            \n            let correctletters = 0;\n            for(let i = 0; i < width; i++){\n                let currTile = document.getElementById(row.toString() + '-' + i.toString());\n                let letter = currTile.innerText;\n                \n                //if the letter is in the coorect position, we increase the number of correct letters\n                if (word[i] == letter) {\n                    currTile.classList.add(\"correct\");//adds the \"correct\" style class to the tile if it is the right position\n                    correctletters += 1;\n                }\n                else if (word.includes(letter)){\n                    currTile.classList.add(\"present\");\n                }\n                else{\n                    currTile.classList.add(\"absent\");\n                }\n            }\n            if (correctletters == width){\n                gameOver = true;\n                document.getElementById(\"bottom\").innerText = \"You guessed the word \"+word+\" correctly!\";\n                document.getElementById(\"bottom\").style.backgroundColor = \"yellowgreen\";\n                document.getElementById(\"vertical_line\").style.display = \"none\";\n                document.getElementById(\"board\").style.display = \"none\";\n                document.getElementById(\"infotext\").style.display = \"none\";\n                document.getElementById(\"congratulations\").style.display = \"flex\";\n                document.getElementById(\"bottom\").style.marginTop = \"2%\";\n            }\n        \n        }\n        \n        \n        function todark(){\n            var something = document.body;\n            something.classList.toggle(\"dark\");\n            var boardtext = document.getElementById(\"board\");\n            boardtext.classList.toggle(\"whitetext\");\n            \n        }\n        \n        \n        function toggleinfo(){\n            var info = document.getElementById(\"infotext\");\n            info.classList.toggle(\"display\");\n        \n            var line = document.getElementById(\"vertical_line\");\n            line.classList.toggle(\"display\");\n        }\n\n        function displayHint(){\n            document.getElementById(\"bottom\").innerText = \"Hint: \"+hint;\n            document.getElementById(\"bottom\").style.backgroundColor = \"beige\";\n            document.getElementById(\"vertical_line\").style.display = \"none\";\n            document.getElementById(\"bottom\").style.color = \"black\";\n        }\n\n\n    \n\n}\n   \n\nexport default Wordle;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}